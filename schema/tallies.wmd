#Copyright MyCHIPs.org; See license in root of this package
#----------------------------------------------------------------
---
mychips.tallies:
  fields:
  - [tally_ent,		ent,	6,	[0,15],		{hide: 1}]
  - [tally_seq,		ent,	4,	[1,15],		{hide: 1}]
  - [tally_type,	pdm,	8,	[0,0],		{ini: stock}]
  - [status,		ent,	8,	[0,1],		{}]
  - [reward,		num,	8,	[0,2],		{ini: 0, just: r, attr: {min: -1, max: 1, step: 0.01}}]
  - [clutch,		num,	8,	[0,3],		{ini: 0, just: r, attr: {min: -1, max: 1, step: 0.01}}]
  - [comment,		ent,	40,	[0,5,4],	{}]

  - [net_c,		ent,	10,	[1,0],		{just: r, wr: 0, sta: readonly}]
  - [net_pc,		ent,	10,	[1,1],		{just: r, wr: 0, sta: readonly}]
  - [target,		num,	8,	[1,2],		{ini: 0, just: r, attr: {min: 0}}]
  - [bound,		num,	8,	[1,3],		{ini: 0, just: r, attr: {min: 0}}]
  - [tally_uuid,	ent,	40,	[1,4,2],	{}]

  - [tally_date,	ent,	20,	[2,0],		{}]
  - [request,		pdm,	10,	[2,1],		{}]
  - [contract,		ent,	20,	[2,2],		{}]

  - [hold_sig,		ent,	10,	[0,7],		{sta: readonly, wr: 0}]
  - [hold_cid,		ent,	20,	[1,7],		{sta: readonly, wr: 0}]
  - [hold_agent,	ent,	28,	[2,7],		{sta: readonly, wr: 0}]
  - [part_sig,		ent,	10,	[0,8],		{sta: readonly, wr: 0}]
  - [part_cid,		ent,	20,	[1,8],		{sta: readonly, wr: 0}]
  - [part_agent,	ent,	28,	[2,8],		{sta: readonly, wr: 0}]

  - [version,		ent,	40,	[0,10],		{opt: 1}]
  - [part_ent,		ent,	8,	[1,10],		{opt: 1}]
  - [stock_terms,	mle,	[80,2],	[0,11,2],	{opt: 1}]
  - [foil_terms,	mle,	[80,2],	[0,12,4],	{opt: 1}]
  
  - [crt_by,     	ent,	10,	[1, 98],	{opt: 1, wr: 0, sta: readonly}]
  - [crt_date,   	inf,	18,	[2, 98],	{opt: 1, wr: 0, sta: readonly}]
  - [mod_by,     	ent,	10,	[1, 99],	{opt: 1, wr: 0, sta: readonly}]
  - [mod_date,		inf,	18,	[2, 99],	{opt: 1, wr: 0, sta: readonly}]
  display: [tally_ent, tally_seq, tally_type, status, part_ent, tally_date, tally_uuid, dr_limit, cr_limit, reward, target]

mychips.tallies_v:
  fields:
  - [hold_name,		ent,	28,	[3,7],		{sta: readonly, wr: 0}]
  - [part_name,		ent,	28,	[3,8],		{sta: readonly, wr: 0}]
  display: [tally_ent, tally_seq, tally_type, status, part_ent, part_name, reward, dr_limit, cr_limit, target]

mychips.tallies_v_me:
  display: [tally_ent, tally_seq, tally_type, part_ent, part_name, dr_limit, cr_limit, total]
  actions:
  - {name: close, ask: 1}
  - name: invite
    render: html
    options:
    - {tag: reuse, input: chk, onvalue: t, offvalue: f}
    - {tag: format, input: pdm, values: [qr, link, json]}
  - name: trade
    render: html
    options:
    - {tag: format, input: pdm, values: [html, url]}
  - name: file
    render: html
    options:
    - {tag: format, input: pdm, values: [html, json]}
    - {tag: digest, input: text}
  - name: hello
    render: html
    options:
    - {tag: format, input: pdm, values: [html, json]}
    - {tag: digest, input: text}
  - name: agree
    render: html
    options:
    - {tag: format, input: pdm, values: [html, url]}
  where: {and: true, items: [{left: status, oper: '=', entry: open}]}
  subviews: [mychips.chits_v_me]
  launch:
    initial: 1,
    import: 'json.import'

mychips.users_v_flat:
  display: [id, user_cid, std_name, bill_addr, bill_city, bill_state]
  sort: [std_name, id]
